# -*- coding: utf-8 -*-
"""jaroflove

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hnGIRppBDbYnY214WYh6b9xcROsJC6nt
"""

# Define the questions and choices
questions = [
    {"question": "What do I love most about you?", "choices": ["Humor", "Sex", "Affirmation", "Calling me out"], "correct_answer": "Calling me out"},
    {"question": "What do you think, I would choose as your favorite food?", "choices": ["Buldwak Ramen", "Thai soup", "Pasta", "Borger"], "correct_answer": "Buldwak Ramen"},
    {"question": "Where did we first meet?", "choices": ["Dream", "Cafe", "2 no. gate", "Your garage"], "correct_answer": "Cafe"},
    {"question": "What do you think, I would choose as your favorite movie from the options below?", "choices": ["Tangled", "Howls Moving Castle", "Whisper of the Heart", "From up on poppy hill"], "correct_answer": "Tangled"},
    {"question": "What's your dream vacation destination, I would choose?", "choices": ["Maldives", "Okinawa", "Bali", "Malaysia"], "correct_answer": "Bali"},
    {"question": "What our favorite hobby?", "choices": ["Reading", "Cooking", "Talking", "Laying down doing nothing"], "correct_answer": "Talking"},
    {"question": "Which animal I would bring home that you would love?", "choices": ["Dog", "Cat", "Hamster", "Tiger"], "correct_answer": "Cat"},
    {"question": "What's our favorite season?", "choices": ["Winter", "Spring", "Summer", "Autumn"], "correct_answer": "Spring"},
    {"question": "What type of music do I think, you like?", "choices": ["Pop", "Rock", "Classical", "Indie"], "correct_answer": "Indie"},
    {"question": "What do you think, I would choose as your favorite movie from the options below?", "choices": ["The Notebook", "Little Women", "Shrek", "Pride and Prejudice"], "correct_answer": "Little Women"},
]

# Streamlit setup
st.set_page_config(page_title="Love Jar Quiz", page_icon="‚ù§Ô∏è", layout="centered")

# Variables to keep track of score and jar filling
score = 0
max_score = len(questions)

# Jar filling function with overflow effect
def show_love_jar(filled_percentage):
    st.markdown(f"### Jar of Love: {filled_percentage}% full")
    love_jar = f"""
    <div style="width: 100px; height: 200px; border: 2px solid black; position: relative; background-color: #f3f3f3;">
        <div style="width: 100px; height: {min(filled_percentage, 100)}%; background-color: #ff69b4; position: absolute; bottom: 0;"></div>
    </div>
    """
    st.markdown(love_jar, unsafe_allow_html=True)

# Animation function (varied animations for each question)
def show_background_animation():
    animations = [
        "https://media.giphy.com/media/26gss0Y01o9yqxGAE/giphy.gif",  # Example: Heart animation
        "https://media.giphy.com/media/3oEjHYkKcEZZGsh62Q/giphy.gif",  # Example: Confetti
        "https://media.giphy.com/media/l1J9tLZVvVgH8W9fw/giphy.gif",  # Example: Cute heart
        "https://media.giphy.com/media/1BhJf8Z5BOVPmRha2D/giphy.gif",  # Example: Sparkles
    ]
    st.image(random.choice(animations), use_column_width=True)

# Function to ask a question and check the answer
def ask_question(question, choices, correct_answer):
    user_answer = st.radio(question, choices, key=question)

    # Prevent multiple answers
    next_button = st.button("Next", disabled=False)

    if user_answer and next_button:
        return user_answer == correct_answer
    return False

# Main Streamlit interface
def main():
    global score
    st.title("Love Jar Quiz")
    st.write("A fun quiz to see how much you know about me!")

    for i, question in enumerate(questions):
        show_background_animation()  # Show a random animation for each question
        st.write(f"**Question {i + 1} of {max_score}:** {question['question']}")

        # Ask question and check answer
        correct = ask_question(question['question'], question['choices'], question['correct_answer'])

        if correct:
            score += 1
            st.success("Correct! ‚ù§Ô∏è")
            # Celebration animation on correct answer
            st.image("https://media.giphy.com/media/1BhJf8Z5BOVPmRha2D/giphy.gif", use_column_width=True)
        else:
            st.error(f"Oops! The correct answer was: {question['correct_answer']}")

        # Show love jar progress
        show_love_jar((score / max_score) * 100)

        # Add a delay for smooth transition between questions
        time.sleep(1.5)

    # Final message
    st.write(f"**Quiz Complete!** You've answered {score} out of {max_score} questions correctly.")

    # Dramatic overflow effect on the last slide
    if score == max_score:
        st.balloons()  # Balloon animation
    show_love_jar(120)  # Overflow the jar
    st.write("**No matter what the correct answer is, you are always right!** üíñ")

# Run the app
if __name__ == "__main__":
    main()