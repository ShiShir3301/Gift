# -*- coding: utf-8 -*-
"""jaroflove

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hnGIRppBDbYnY214WYh6b9xcROsJC6nt
"""

import streamlit as st
import matplotlib.pyplot as plt
import numpy as np
from matplotlib.animation import FuncAnimation

# List of questions, choices, and correct answers
questions = [
    {"question": "What do I love most about you?", "choices": ["Humor", "Sex", "Affirmation", "Calling me out"], "correct_answer": "Calling me out"},
    {"question": "What do you think, I would choose as your favorite food?", "choices": ["Buldwak Ramen", "Thai soup", "Pasta", "Borger"], "correct_answer": "Buldwak Ramen"},
    {"question": "Where did we first meet?", "choices": ["Dream", "Cafe", "2 no. gate", "Your garage"], "correct_answer": "Cafe"},
    {"question": "What do you think, I would choose as your favorite movie from the options below?", "choices": ["Tangled", "Howls Moving Castle", "Whisper of the Heart", "From up on poppy hill"], "correct_answer": "Tangled"},
    {"question": "What's your dream vacation destination, I would choose?", "choices": ["Maldives", "Okinawa", "Bali", "Malaysia"], "correct_answer": "Bali"},
    {"question": "What our favorite hobby?", "choices": ["Reading", "Cooking", "Talking", "Laying down doing nothing"], "correct_answer": "Talking"},
    {"question": "Which animal I would bring home that you would love?", "choices": ["Dog", "Cat", "Hamster", "Tiger"], "correct_answer": "Cat"},
    {"question": "What's our favorite season?", "choices": ["Winter", "Spring", "Summer", "Autumn"], "correct_answer": "Spring"},
    {"question": "What type of music do I think, you like?", "choices": ["Pop", "Rock", "Classical", "Indie"], "correct_answer": "Indie"},
    {"question": "What do you think, I would choose as your favorite movie from the options below?", "choices": ["The Notebook", "Little Women", "Shrek", "Pride and Prejudice"], "correct_answer": "Little Women"}
]

# Initialize session state for tracking progress
if "question_index" not in st.session_state:
    st.session_state.question_index = 0
if "correct_answers" not in st.session_state:
    st.session_state.correct_answers = 0

# Function to update the jar of love (Progress Bar)
def update_jar_of_love(correct_answers, total_questions):
    progress = correct_answers / total_questions
    st.progress(progress)  # Visual progress bar

# Function to animate a simple graph (replacing GIFs with Python animation)
def animate():
    fig, ax = plt.subplots()
    x = np.linspace(0, 2 * np.pi, 100)
    line, = ax.plot(x, np.sin(x))

    def update(i):
        line.set_ydata(np.sin(x + i / 10.0))  # Update the plot
        return line,

    ani = FuncAnimation(fig, update, frames=100, interval=50, blit=True)
    st.pyplot(fig)

# Function to ask questions and provide feedback
def ask_question(question, choices, correct_answer):
    st.write(question)
    user_choice = st.radio("Choose an answer:", choices, key=f"{question}_radio")

    if user_choice:
        if user_choice == correct_answer:
            st.session_state.correct_answers += 1  # Increase correct answers counter
            st.success(f"Correct! The answer is: {correct_answer}")
        else:
            st.error(f"Oops! The correct answer was: {correct_answer}")

# Main function to manage the quiz and handle "Next" button
def main():
    total_questions = len(questions)

    # Get the current question
    current_question = questions[st.session_state.question_index]

    # Ask the current question
    ask_question(current_question['question'], current_question['choices'], current_question['correct_answer'])

    # Show the jar of love progress
    update_jar_of_love(st.session_state.correct_answers, total_questions)

    # Button to go to the next question
    if st.button("Next", key=f"next_{st.session_state.question_index}"):
        if st.session_state.question_index < total_questions - 1:
            st.session_state.question_index += 1
        else:
            # Final message when all questions are answered
            st.write("The jar is full of love!")
            st.write(f"You answered {st.session_state.correct_answers}/{total_questions} correctly.")
            st.write("But no matter what, you are always right. <3")
            st.balloons()  # Add some balloons for celebration
            animate()  # Show an animation after the quiz ends

# Running the main function
if __name__ == "__main__":
    main()